"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7493],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9231:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Problem set 1",tags:["MIT",6.087,"C","UNIX"]},s=void 0,c={unversionedId:"MIT-6.087/PB1/index",id:"MIT-6.087/PB1/index",title:"Problem set 1",description:"Problem",source:"@site/Blogs/learning/MIT-6.087/PB1/index.md",sourceDirName:"MIT-6.087/PB1",slug:"/MIT-6.087/PB1/",permalink:"/learning/MIT-6.087/PB1/",draft:!1,tags:[{label:"MIT",permalink:"/learning/tags/mit"},{label:"6.087",permalink:"/learning/tags/6-087"},{label:"C",permalink:"/learning/tags/c"},{label:"UNIX",permalink:"/learning/tags/unix"}],version:"current",frontMatter:{title:"Problem set 1",tags:["MIT","6.087","C","UNIX"]}},u={},d=[{value:"Problem",id:"problem",level:3},{value:"1.1 (a) What do curly braces denote in C? Why does it make sense to use curly braces to surround the body of a function?",id:"11-a-what-do-curly-braces-denote-in-c-why-does-it-make-sense-to-use-curly-braces-to-surround-the-body-of-a-function",level:4},{value:"1.1 (b) Describe the difference between the literal values 7, &quot;7&quot;, and \u20197\u2019.",id:"11-b-describe-the-difference-between-the-literal-values-7-7-and-7",level:4},{value:"1.1  (c) Consider the statement",id:"11--c-consider-the-statement",level:4},{value:"1.2 Consider the statement",id:"12-consider-the-statement",level:4},{value:"1.3 Write the \u201cHello, 6.087 students\u201d program described in lecture in your favorite text editor and compile and execute it. Turn in a printout or screen shot showing",id:"13-write-the-hello-6087-students-program-described-in-lecture-in-your-favorite-text-editor-and-compile-and-execute-it-turn-in-a-printout-or-screen-shot-showing",level:4},{value:"1.4 The following lines of code, when arranged in the proper sequence, output the simple message \u201cAll your base are belong to us.\u201d",id:"14-the-following-lines-of-code-when-arranged-in-the-proper-sequence-output-the-simple-message-all-your-base-are-belong-to-us",level:4},{value:"1.5 For each of the following statements, explain why it is not correct, and fix it.",id:"15-for-each-of-the-following-statements-explain-why-it-is-not-correct-and-fix-it",level:4},{value:"Short summary of Lecture 1",id:"short-summary-of-lecture-1",level:2},{value:"File structure of a .c file",id:"file-structure-of-a-c-file",level:4},{value:"Preprocessor macros",id:"preprocessor-macros",level:4},{value:"important command",id:"important-command",level:4}],p={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"problem"},"Problem"),(0,a.kt)("p",null,"Lecture notes link ",(0,a.kt)("a",{href:"https://ocw.mit.edu/courses/6-087-practical-programming-in-c-january-iap-2010/resources/mit6_087iap10_lec01/"},"Click me!"),(0,a.kt)("br",null),"\nQuestion link ",(0,a.kt)("a",{href:"https://ocw.mit.edu/courses/6-087-practical-programming-in-c-january-iap-2010/resources/mit6_087iap10_assn01/"},"Click me!"),(0,a.kt)("br",null),"\nSolution link ",(0,a.kt)("a",{href:"https://ocw.mit.edu/courses/6-087-practical-programming-in-c-january-iap-2010/resources/mit6_087iap10_assn01_sol/"},"Click me!")),(0,a.kt)("h4",{id:"11-a-what-do-curly-braces-denote-in-c-why-does-it-make-sense-to-use-curly-braces-to-surround-the-body-of-a-function"},"1.1 (a) What do curly braces denote in C? Why does it make sense to use curly braces to surround the body of a function?"),(0,a.kt)("p",null,"The curly braces denote a block of code, in which variables can be declared. ",(0,a.kt)("strong",{parentName:"p"},"Variables\ndeclared within the block are valid only until the end of the block"),", marked by the matching\nright curly brace \u2019}\u2019. The body of a function is one such type of block, and thus, curly braces\nare used to describe the extent of that block."),(0,a.kt)("h4",{id:"11-b-describe-the-difference-between-the-literal-values-7-7-and-7"},'1.1 (b) Describe the difference between the literal values 7, "7", and \u20197\u2019.'),(0,a.kt)("p",null,"7 is integer",(0,a.kt)("br",null),"\n\"7\" is a a null-terminated string holds a character '7'",(0,a.kt)("br",null),"\n'7' is a char",(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"11--c-consider-the-statement"},"1.1  (c) Consider the statement"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"double ans = 10.0+2.0/3.0\u22122.0\u22172.0;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"}," Rewrite this statement, inserting parentheses to ensure that ans = 11.0\nupon evaluation of this statement. ")),(0,a.kt)("p",null,"double ans = 10.0+2.0/((3.0\u22122.0)\u22172.0)"),(0,a.kt)("h4",{id:"12-consider-the-statement"},"1.2 Consider the statement"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"double ans = 18.0/squared(2+1)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\nFor each of the four versions of the function macro squared() below, write the corresponding value\nof ans.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1. #define squared(x) x*x \n2. #define squared(x) (x*x)\n3. #define squared(x) (x)*(x)\n4. #define squared(x) ((x)*(x))\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"18.0/2+1*2+1 = 12.0"),(0,a.kt)("li",{parentName:"ol"},"18.0/(2+1*2+1) = 3.6"),(0,a.kt)("li",{parentName:"ol"},"18.0/(2+1)*(2+1) = 18.0"),(0,a.kt)("li",{parentName:"ol"},"18.0/((2+1)*(2+1)) = 2.0")),(0,a.kt)("h4",{id:"13-write-the-hello-6087-students-program-described-in-lecture-in-your-favorite-text-editor-and-compile-and-execute-it-turn-in-a-printout-or-screen-shot-showing"},"1.3 Write the \u201cHello, 6.087 students\u201d program described in lecture in your favorite text editor and compile and execute it. Turn in a printout or screen shot showing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'#include <stdio.h>\nint main() {\n   // printf() displays the string inside quotation\n   printf("Hello, World!");\n   return 0;\n}\n')),(0,a.kt)("p",null,"\u2022 The command used to compile your program"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gcc -g -O0 -Wall hello.c -o hello.o\n")),(0,a.kt)("p",null,"\u2022 The command used to execute your program (using gdb)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gdb hello.o\ngdb run\n")),(0,a.kt)("h4",{id:"14-the-following-lines-of-code-when-arranged-in-the-proper-sequence-output-the-simple-message-all-your-base-are-belong-to-us"},"1.4 The following lines of code, when arranged in the proper sequence, output the simple message \u201cAll your base are belong to us.\u201d"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'1. return 0;\n2. const char msg[] = MSG1;\n3. }\n4. #define MSG1 "All your base are belong to us!"\n5. int main(void) {\n6. #include <stdio.h>\n7. puts(msg);\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"}," Write out the proper arrangement (line numbers are sufficient) of this code. ")),(0,a.kt)("p",null,"6 -> 4 -> 5 -> 2 -> 7 -> 1 -> 3"),(0,a.kt)("h4",{id:"15-for-each-of-the-following-statements-explain-why-it-is-not-correct-and-fix-it"},"1.5 For each of the following statements, explain why it is not correct, and fix it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(a) #include <stdio.h>;\n")),(0,a.kt)("p",null,"semicolons ",(0,a.kt)("inlineCode",{parentName:"p"},";")," refer to termination. Pre-processor macros should not be terminated. The correct one will be ",(0,a.kt)("inlineCode",{parentName:"p"},"#include <stdio.h>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(b) int function(void arg1)\n{\nreturn arg1-1;\n}\n")),(0,a.kt)("p",null,"void type signifies an empty variable, ",(0,a.kt)("inlineCode",{parentName:"p"},"void")," should be replace with ",(0,a.kt)("inlineCode",{parentName:"p"},"int")," instead."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'(c) #define MESSAGE = "Happy new year!"\nputs(MESSAGE);\n')),(0,a.kt)("p",null,"There is not any needs of assignment operator. The correct one will be '#define MESSAGE \"Happy new year!\"'"),(0,a.kt)("h2",{id:"short-summary-of-lecture-1"},"Short summary of Lecture 1"),(0,a.kt)("h4",{id:"file-structure-of-a-c-file"},"File structure of a .c file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"/* Begin with comments about file contents */\nInsert #include statements and preprocessor\ndefinitions\nFunction prototypes and variable declarations\nDefine main() function\n{\nFunction body\n}\nDefine other function\n{\nFunction body\n}\n")),(0,a.kt)("h4",{id:"preprocessor-macros"},"Preprocessor macros"),(0,a.kt)("p",null,"Preprocessor macros begin with ",(0,a.kt)("inlineCode",{parentName:"p"},"#")," character "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'1. #include <stdio.h>\n2. #define msg "hello, 6.087 students"\n')),(0,a.kt)("h4",{id:"important-command"},"important command"),(0,a.kt)("p",null,"\u2022 The command used to compile your program"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gcc -g -O0 -Wall hello.c -o hello.o\n")),(0,a.kt)("p",null,"\u2022 The command used to execute your program (using gdb)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gdb hello.o\ngdb run\n")))}m.isMDXComponent=!0}}]);