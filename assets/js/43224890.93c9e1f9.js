"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5465],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var s=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=s.createContext({}),u=function(e){var n=s.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return s.createElement(i.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},h=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=u(t),d=r,f=h["".concat(i,".").concat(d)]||h[d]||g[d]||o;return t?s.createElement(f,a(a({ref:n},c),{},{components:t})):s.createElement(f,a({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=h;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return s.createElement.apply(null,a)}return s.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9531:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return g}});var s=t(7462),r=t(3366),o=(t(7294),t(3905)),a=["components"],l={title:"Rust Hangman",hide_table_of_contents:!1,tags:["Stanford","CS110L","Rust","System Programming"]},i=void 0,u={unversionedId:"rust-hangman",id:"rust-hangman",title:"Rust Hangman",description:"Details",source:"@site/Blogs/projects/rust-hangman.mdx",sourceDirName:".",slug:"/rust-hangman",permalink:"/projects/rust-hangman",draft:!1,tags:[{label:"Stanford",permalink:"/projects/tags/stanford"},{label:"CS110L",permalink:"/projects/tags/cs-110-l"},{label:"Rust",permalink:"/projects/tags/rust"},{label:"System Programming",permalink:"/projects/tags/system-programming"}],version:"current",frontMatter:{title:"Rust Hangman",hide_table_of_contents:!1,tags:["Stanford","CS110L","Rust","System Programming"]},sidebar:"mySidebar",previous:{title:"Overview",permalink:"/projects/"}},c={},g=[{value:"Details",id:"details",level:2},{value:"Learning outcome",id:"learning-outcome",level:2},{value:"Variable with Underscore(_) Prefix",id:"variable-with-underscore_-prefix",level:3},{value:"Common Use-cases",id:"common-use-cases",level:4},{value:"Borrowing and Ownership",id:"borrowing-and-ownership",level:3},{value:"Example",id:"example",level:2},{value:"Successful guess",id:"successful-guess",level:3},{value:"Failed guess",id:"failed-guess",level:3},{value:"Code",id:"code",level:2}],h={toc:g};function d(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,s.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"details"},"Details"),(0,o.kt)("p",null,"A simple mini project to get myself familiar with rust syntax, more details will be mentioned bellow."),(0,o.kt)("h2",{id:"learning-outcome"},"Learning outcome"),(0,o.kt)("h3",{id:"variable-with-underscore_-prefix"},"Variable with Underscore(_) Prefix"),(0,o.kt)("p",null,"This warning message will appear when there are unused variable and suggested to use ",(0,o.kt)("inlineCode",{parentName:"p"},"_i")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"i")," , which refer to variable to ignore warning."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"help: if the variable is meant to be unused, consider prefixing with an underscore: `_i`\n")),(0,o.kt)("h4",{id:"common-use-cases"},"Common Use-cases"),(0,o.kt)("p",null,"when we want a for loop in a range, which the loop counter does not need to be used as a variable like being index of a vector, it is better to use _i to ignore warning message."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"for _i in 0..10 {\n    println!();\n}\n")),(0,o.kt)("h3",{id:"borrowing-and-ownership"},"Borrowing and Ownership"),(0,o.kt)("p",null,"This is something similar to pointer in C/C++ but with memory-safety features which compiler wont let the program being compile if we don't follow the rust's ownership rules"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"hs : &HashSet<char>\nv : &Vec<char> \n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("h3",{id:"successful-guess"},"Successful guess"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Welcome to CS110L Hangman!\nThe word so far is -------\nYou have guessed the following letters:\nYou have 5 guesses left\nPlease guess a letter: r\n\nThe word so far is ------r\nYou have guessed the following letters: r\nYou have 5 guesses left\nPlease guess a letter: s\n\nThe word so far is ---s--r\nYou have guessed the following letters: rs\nYou have 5 guesses left\nPlease guess a letter: t\n\nThe word so far is ---st-r\nYou have guessed the following letters: rst\nYou have 5 guesses left\nPlease guess a letter: l\n\nThe word so far is l--st-r\nYou have guessed the following letters: rstl\nYou have 5 guesses left\nPlease guess a letter: a\nSorry, that letter is not in the word\n\nThe word so far is l--st-r\nYou have guessed the following letters: rstla\nYou have 4 guesses left\nPlease guess a letter: b\n\nThe word so far is l-bst-r\nYou have guessed the following letters: rstlab\nYou have 4 guesses left\nPlease guess a letter: c\nSorry, that letter is not in the word\n\nThe word so far is l-bst-r\nYou have guessed the following letters: rstlabc\nYou have 3 guesses left\nPlease guess a letter: o\n\nThe word so far is lobst-r\nYou have guessed the following letters: rstlabco\nYou have 3 guesses left\nPlease guess a letter: e\n\nCongratulations you guessed the secret word: lobster!\n")),(0,o.kt)("h3",{id:"failed-guess"},"Failed guess"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Welcome to CS110L Hangman!\nThe word so far is --------\nYou have guessed the following letters:\nYou have 5 guesses left\nPlease guess a letter: a\n\nThe word so far is --a-----\nYou have guessed the following letters: a\nYou have 5 guesses left\nPlease guess a letter: b\nSorry, that letter is not in the word\n\nThe word so far is --a-----\nYou have guessed the following letters: ab\nYou have 4 guesses left\nPlease guess a letter: c\n\nThe word so far is c-a-----\nYou have guessed the following letters: abc\nYou have 4 guesses left\nPlease guess a letter: d\nSorry, that letter is not in the word\n\nThe word so far is c-a-----\nYou have guessed the following letters: abcd\nYou have 3 guesses left\nPlease guess a letter: e\nSorry, that letter is not in the word\n\nThe word so far is c-a-----\nYou have guessed the following letters: abcde\nYou have 2 guesses left\nPlease guess a letter: f\n\nThe word so far is c-a-f---\nYou have guessed the following letters: abcdef\nYou have 2 guesses left\nPlease guess a letter: g\nSorry, that letter is not in the word\n\nThe word so far is c-a-f---\nYou have guessed the following letters: abcdefg\nYou have 1 guesses left\nPlease guess a letter: h\n\nThe word so far is c-a-f--h\nYou have guessed the following letters: abcdefgh\nYou have 1 guesses left\nPlease guess a letter: i\n\nThe word so far is c-a-fi-h\nYou have guessed the following letters: abcdefghi\nYou have 1 guesses left\nPlease guess a letter: j\nSorry, that letter is not in the word\n\nSorry, you ran out of guesses!\n")),(0,o.kt)("h2",{id:"code"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'extern crate rand;\nuse rand::Rng;\nuse std::fs;\nuse std::io;\nuse std::io::Write;\nuse std::collections::HashSet;\n\nconst NUM_INCORRECT_GUESSES: u32 = 5;\nconst WORDS_PATH: &str = "words.txt";\n\nfn pick_a_random_word() -> String {\n    let file_string = fs::read_to_string(WORDS_PATH).expect("Unable to read file.");\n    let words: Vec<&str> = file_string.split(\'\\n\').collect();\n    String::from(words[rand::thread_rng().gen_range(0, words.len())].trim())\n}\n\nfn print_guesses_result(v : &Vec<char> ) {\n    print!("The word so far is ");\n    for i in v{\n        print!("{}",i);\n    }\n    println!();\n}\n\nfn print_guesses_following_letters(hs : &HashSet<char> ) {\n    print!("You have guessed the following letters: ");\n    for i in hs{\n        print!("{}",i);\n    }\n    println!();\n}\n\nfn main() {\n    let secret_word = pick_a_random_word(); \n    let secret_word_chars: Vec<char> = secret_word.chars().collect(); \n\n    // My code here! :) \n    let mut curr_wrong_guesses = 0; \n    let mut guesses_result_chars = Vec::new();\n    let mut guesses_unique_chars = HashSet::new();\n    for _i in 0..secret_word_chars.len() {\n        guesses_result_chars.push(\'-\');\n    }\n    println!("Welcome to CS110L Hangman!");\n    loop {\n        print_guesses_result(&guesses_result_chars); \n        print_guesses_following_letters(&guesses_unique_chars); \n        println!("You have {} guesses left",NUM_INCORRECT_GUESSES - curr_wrong_guesses);\n        if NUM_INCORRECT_GUESSES - curr_wrong_guesses == 0 {\n            println!();\n            println!("Sorry, you ran out of guesses!"); \n            break;\n        }\n        if guesses_result_chars == secret_word_chars{            \n            println!();\n            println!("Congratulations you guessed the secret word: {}!",secret_word); \n            break;\n        }\n        print!("Please guess a letter: ");\n        io::stdout()\n            .flush()\n            .expect("Error flushing stdout.");\n        let mut user_input = String::new();\n        io::stdin()\n            .read_line(&mut user_input)\n            .expect("Error flushing stdout.");\n        println!(); \n        let guesses_char: Vec<char> = user_input.chars().collect();\n        if guesses_unique_chars.contains(&guesses_char[0]){\n            println!("This letter have been inputted already");\n            println!();\n        } else {\n            if secret_word_chars.contains(&guesses_char[0]){\n                for i in 0..secret_word_chars.len(){\n                    if secret_word_chars[i] == guesses_char[0]{\n                        guesses_result_chars[i]=guesses_char[0];\n                    }\n                }\n            } else {\n                curr_wrong_guesses = curr_wrong_guesses + 1;\n                println!("Sorry, that letter is not in the word")\n            } \n            guesses_unique_chars.insert(guesses_char[0]);\n        } \n    } \n}\n\n')))}d.isMDXComponent=!0}}]);